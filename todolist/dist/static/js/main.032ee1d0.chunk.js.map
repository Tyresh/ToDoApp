{"version":3,"sources":["pages/globalStyles.ts","pages/LoginPage/styles.ts","services/firebase.ts","services/hooks/createUser.ts","services/hooks/getAllUsers.ts","services/hooks/signUserIn.ts","pages/LoginPage/LoginPage.tsx","pages/ToDoPage/styles.ts","services/hooks/addTodo.ts","services/hooks/signUserOut.ts","services/hooks/getCurrentUser.ts","services/hooks/getUserToDos.ts","pages/ToDoPage/ToDoPage.tsx","pages/AdminPage/styles.ts","pages/AdminPage/AdminPage.tsx","App.tsx","index.tsx"],"names":["ContainerForm","styled","div","ContentForm","ModalAnchor","a","ModalDiv","ModalTitle","h2","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authRef","dbRef","storeRef","createUser","userEmail","userPassword","createUserWithEmailAndPassword","then","user","collection","doc","uid","set","email","password","type","toDos","getAllUsers","get","res","docs","map","e","data","response","signUserIn","statusAuth","verified","userType","forEach","signInWithEmailAndPassword","userInfo","console","log","LoginPage","useState","modal","setModal","signEmail","setSignEmail","signPassword","setSignPassword","loginEmail","setLoginEmail","loginPassword","setLoginPassword","opacity","content","color","statusSignUp","setStatusSignUp","statusLogin","setStatusLogin","logoUrlState","setLogoUrlState","history","useHistory","useEffect","ref","getDownloadURL","url","logo","getLogo","handleSignUpButton","length","statusAuthSignUp","handleSignInButton","statusAuthSignIn","push","src","style","width","height","TextField","id","label","variant","onChange","event","target","value","marginTop","Button","component","onClick","Modal","open","onClose","display","justifyContent","alignItems","AddToDoContainer","ToDosContainer","UlToDo","ul","DivLiTodo","ToDoEmpty","LogOutButton","button","addTodo","titleToDo","descriptionToDo","userUid","userToDos","newToDos","usersDoc","toDo","title","description","update","signUserOut","signOut","getCurrentUser","currentUser","getUserToDos","userToDosArray","ToDoPage","setTitleToDo","setDescriptionToDo","toDoState","setToDoState","errorState","setErrorState","getToDos","handleAddToDo","flexDirection","marginRight","Fab","marginLeft","size","aria-label","item","key","paddingLeft","UsersContainer","UlUser","DivLiUser","UserEmpty","AdminPage","usersState","setUsersState","userTypes_user","App","exact","path","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.032ee1d0.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ContainerForm = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin: auto;\n  justify-content: center;\n  flex-direction: column;\n  background: #fcfcfc;\n  position: absolute;\n`;\n\nexport const ContentForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\n\nexport const ModalAnchor = styled.a`\n  text-decoration: none;\n  font-weight: bold;\n  color: #8359a3;\n  margin-left: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const ModalDiv = styled.div`\n  height: 40%;\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: #fff;\n`;\n\nexport const ModalTitle = styled.h2`\n  background: #fff;\n`;\n","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nlet config = {\n  apiKey: \"AIzaSyDwGnA_Qp4BS5fGqKL250-HPyv5BvYGQh0\",\n  authDomain: \"todolist-24252.firebaseapp.com\",\n  databaseURL: \"https://todolist-24252.firebaseio.com\",\n  projectId: \"todolist-24252\",\n  storageBucket: \"todolist-24252.appspot.com\",\n  messagingSenderId: \"619714024992\",\n  appId: \"1:619714024992:web:3552910e56aacf94190e45\",\n};\n\nfirebase.initializeApp(config);\n\nexport const authRef = firebase.auth();\nexport const dbRef = firebase.firestore();\nexport const storeRef = firebase.storage();\n","import { authRef, dbRef } from \"../firebase\";\n\n/**\n *Função que cadastra usuário no Authentication e no Firestore\n * @param userEmail - Email do usuário\n * @param userPassword - Senha do usuário\n */\nexport const createUser = async (userEmail: string, userPassword: string) => {\n  const { user } = await authRef\n    .createUserWithEmailAndPassword(userEmail, userPassword)\n    .then((user) => {\n      return user;\n    });\n  await dbRef.collection(\"users\").doc(user.uid).set({\n    email: userEmail,\n    password: userPassword,\n    type: \"user\",\n    toDos: [],\n  });\n};\n","import { dbRef } from \"../firebase\";\n\n/**\n * Pegar todos os usuários do banco\n */\nexport const getAllUsers = async () => {\n  const response = await dbRef\n    .collection(\"users\")\n    .get()\n    .then((res) => {\n      return res.docs.map((e) => e.data());\n    });\n  return response;\n};\n","import { authRef } from \"../firebase\";\nimport { getAllUsers } from \"./getAllUsers\";\nimport { StatusAuth } from \"../../pages/LoginPage/LoginPage\";\n\n/**\n * Realiza o login do usuário\n * @param userEmail - Email do usuário\n * @param userPassword - Senha do usuário\n */\nexport const signUserIn = async (userEmail: string, userPassword: string) => {\n  let statusAuth: StatusAuth = { verified: false, userType: \"\" };\n  const allUsers = await getAllUsers();\n  allUsers.forEach(async (e) => {\n    if (e.email === userEmail && e.password === userPassword) {\n      statusAuth = { verified: true, userType: e.type };\n      await authRef\n        .signInWithEmailAndPassword(userEmail, userPassword)\n        .then((userInfo) => {\n          console.log(\"User Signed In\");\n        });\n    }\n  });\n  return statusAuth;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { ContainerForm, ContentForm } from \"../globalStyles\";\nimport { ModalAnchor, ModalDiv, ModalTitle } from \"./styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { createUser } from \"../../services/hooks/createUser\";\nimport { signUserIn } from \"../../services/hooks/signUserIn\";\nimport { useHistory } from \"react-router-dom\";\nimport { getAllUsers } from \"../../services/hooks/getAllUsers\";\nimport { storeRef } from \"../../services/firebase\";\n\nexport interface StatusAuth {\n  verified: boolean;\n  userType: string;\n}\n\nfunction LoginPage() {\n  const [modal, setModal] = useState(false);\n  const [signEmail, setSignEmail] = useState(\"\");\n  const [signPassword, setSignPassword] = useState(\"\");\n  const [loginEmail, setLoginEmail] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [statusSignUp, setStatusSignUp] = useState({\n    opacity: 0,\n    content: \"\",\n    color: \"\",\n  });\n  const [statusLogin, setStatusLogin] = useState({ opacity: 0, content: `` });\n  const [logoUrlState, setLogoUrlState] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    const getLogo = async () => {\n      const logo = await storeRef\n        .ref(\"todo-logo.webp\")\n        .getDownloadURL()\n        .then((url) => url);\n      setLogoUrlState(logo);\n    };\n    getLogo();\n  }, []);\n\n  const handleModalOpen = () => {\n    setModal(true);\n    setSignEmail(\"\");\n    setSignPassword(\"\");\n  };\n\n  const handleModalClose = () => {\n    setStatusSignUp({ opacity: 0, content: \"\", color: \"\" });\n    setModal(false);\n  };\n\n  const handleSignEmail = (event: any) => {\n    setSignEmail(event.target.value);\n  };\n  const handleSignPassword = (event: any) => {\n    setSignPassword(event.target.value);\n  };\n\n  const handleLoginEmail = (event: any) => {\n    setLoginEmail(event.target.value);\n  };\n\n  const handleLoginPassword = (event: any) => {\n    setLoginPassword(event.target.value);\n  };\n\n  const handleSignUpButton = async () => {\n    if (signEmail.length === 0 || signPassword.length === 0) {\n      setStatusSignUp({\n        opacity: 1,\n        content: \"One or more fields are empty!\",\n        color: \"#F00\",\n      });\n    } else {\n      let statusAuthSignUp: boolean = true;\n      const allUsers = await getAllUsers();\n      allUsers.forEach((e) => {\n        if (e.email === signEmail) {\n          statusAuthSignUp = false;\n        }\n      });\n      if (statusAuthSignUp) {\n        await createUser(signEmail, signPassword).then(() => {\n          setStatusSignUp({\n            opacity: 1,\n            content: \"User created!\",\n            color: \"#00a000\",\n          });\n        });\n      } else {\n        setStatusSignUp({\n          opacity: 1,\n          content: \"Email already exists!\",\n          color: \"#F00\",\n        });\n      }\n    }\n  };\n\n  const handleSignInButton = async () => {\n    const statusAuthSignIn: StatusAuth = await signUserIn(\n      loginEmail,\n      loginPassword\n    );\n    if (statusAuthSignIn.verified && statusAuthSignIn.userType === \"user\") {\n      const pathUser = \"/toDoPage\";\n      history.push(pathUser);\n    } else if (statusAuthSignIn && statusAuthSignIn.userType === \"admin\") {\n      const pathAdmin = \"/adminPage\";\n      history.push(pathAdmin);\n    } else {\n      setStatusLogin({\n        opacity: 1,\n        content: `E-mail or password doesn't exist`,\n      });\n    }\n  };\n  return (\n    <>\n      {logoUrlState ? (\n        <ContainerForm>\n          <ContentForm>\n            <img\n              src={logoUrlState}\n              style={{ width: \"100px\", height: \"100px\" }}\n            />\n            <h1>Welcome to your ToDos!</h1>\n            <h2>Log In to create, edit and much more!</h2>\n            <p style={{ opacity: statusLogin.opacity, color: \"#F00\" }}>\n              {statusLogin.content}\n            </p>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"E-mail\"\n              variant=\"outlined\"\n              onChange={handleLoginEmail}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Senha\"\n              style={{ marginTop: \"20px\" }}\n              type=\"password\"\n              variant=\"outlined\"\n              onChange={handleLoginPassword}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              onClick={handleSignInButton}\n              style={{ marginTop: \"40px\" }}\n            >\n              Login\n            </Button>\n            <h4>Don't have an account? </h4>\n            <ModalAnchor onClick={handleModalOpen}>Sign up here</ModalAnchor>\n            <Modal\n              open={modal}\n              onClose={handleModalClose}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <ModalDiv>\n                <ModalTitle>Sign Up</ModalTitle>\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Type in your email\"\n                  variant=\"outlined\"\n                  onChange={handleSignEmail}\n                />\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Type in your password\"\n                  type=\"password\"\n                  style={{ marginTop: \"10px\" }}\n                  variant=\"outlined\"\n                  onChange={handleSignPassword}\n                />\n                <p\n                  style={{\n                    opacity: statusSignUp.opacity,\n                    color: statusSignUp.color,\n                  }}\n                >\n                  {statusSignUp.content}\n                </p>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  component=\"span\"\n                  onClick={handleSignUpButton}\n                  style={{ marginTop: \"40px\" }}\n                >\n                  Sign Up\n                </Button>\n              </ModalDiv>\n            </Modal>\n          </ContentForm>\n        </ContainerForm>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default LoginPage;\n","import styled from \"styled-components\";\n\nexport const AddToDoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 20%;\n  width: 100vh;\n`;\n\nexport const ToDosContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const UlToDo = styled.ul`\n  list-style-type: none;\n  width: 100%;\n  padding-left: 0px;\n`;\n\nexport const DivLiTodo = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  background: #e0e0e0;\n  width: 100%;\n  height: 150px;\n  border-radius: 5px;\n  box-shadow: 12 0 3 9;\n`;\n\nexport const ToDoEmpty = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #e0e0e0;\n  margin-bottom: 10px;\n  width: 100%;\n  height: 150px;\n  border-radius: 5px;\n  box-shadow: 12 0 3 9;\n`;\n\nexport const LogOutButton = styled.button`\n  background: #cd0000;\n  color: #ffffff;\n  border-radius: 5px;\n  border: none;\n  font-weight: bold;\n  font-size: 20px;\n  width: 135px;\n  height: 40px;\n  cursor: pointer;\n  margin-top: 10px;\n  margin-left: 10px;\n`;\n","import { dbRef } from \"../firebase\";\n/**\n * Função que adiciona todos nos registros de determinado usuário\n * @param titleToDo título da todo\n * @param descriptionToDo descrição da todo\n * @param userEmail e-mail do usuário\n */\nexport const addTodo = async (\n  titleToDo: string,\n  descriptionToDo: string,\n  userUid: string\n) => {\n  // array de Idusuários [user1, user2...]\n  let userToDos: any[] = [];\n  let newToDos: any[] = [];\n\n  const usersDoc = await dbRef\n    .collection(\"users\")\n    .get()\n    .then((res) => {\n      const data = res.docs.map((doc: any) => {\n        if (userUid === doc.id) {\n          userToDos = doc.data().toDos;\n        }\n      });\n      return data;\n    });\n\n  userToDos.forEach((toDo) => {\n    newToDos.push(toDo);\n  });\n  newToDos.push({ title: titleToDo, description: descriptionToDo });\n\n  console.log(newToDos);\n\n  usersDoc.forEach(async () => {\n    await dbRef.collection(\"users\").doc(userUid).update({ toDos: newToDos });\n  });\n\n  return newToDos;\n};\n","import { authRef } from \"../firebase\";\n/**\n * Realiza o logout do usuário\n */\nexport const signUserOut = async () => {\n  await authRef.signOut().then(() => {\n    console.log(\"User Signed Out\");\n  });\n};\n","import { authRef } from \"../firebase\";\n/**\n * Pega o usuário que está logado atualmente\n */\nexport const getCurrentUser = () => {\n  const usuario: any = authRef.currentUser?.uid;\n  return usuario;\n};\n","import { dbRef } from \"../firebase\";\n/**\n * Acessa todas as ToDos da Uid usuário fornecido\n * @param userUid - Uid do Usuário\n */\nexport const getUserToDos = async (userUid: string) => {\n  let userToDosArray: any[] = [];\n  // conseguindo Array de toDos\n  await dbRef\n    .collection(\"users\")\n    .get()\n    .then((res) => {\n      const data = res.docs.map((doc: any) => {\n        if (userUid === doc.id) {\n          if (doc.data().type === \"user\") userToDosArray = doc.data().toDos;\n        }\n      });\n      return data;\n    });\n\n  return userToDosArray;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { ContainerForm, ContentForm } from \"../globalStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {\n  AddToDoContainer,\n  ToDosContainer,\n  UlToDo,\n  DivLiTodo,\n  ToDoEmpty,\n  LogOutButton,\n} from \"./styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useHistory } from \"react-router\";\nimport { addTodo } from \"../../services/hooks/addTodo\";\nimport { signUserOut } from \"../../services/hooks/signUserOut\";\nimport { getCurrentUser } from \"../../services/hooks/getCurrentUser\";\nimport { getUserToDos } from \"../../services/hooks/getUserToDos\";\nimport { storeRef } from \"../../services/firebase\";\n\nfunction ToDoPage() {\n  const [titleToDo, setTitleToDo] = useState(\"\");\n  const [descriptionToDo, setDescriptionToDo] = useState(\"\");\n  const [toDoState, setToDoState] = useState<any[]>([]);\n  const [errorState, setErrorState] = useState(0);\n  const [logoUrlState, setLogoUrlState] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    const getToDos = async () => {\n      const toDos = await getUserToDos(getCurrentUser());\n      setToDoState(toDos);\n    };\n    getToDos();\n  }, toDoState);\n\n  useEffect(() => {\n    const getLogo = async () => {\n      const logo = await storeRef\n        .ref(\"todo-logo.webp\")\n        .getDownloadURL()\n        .then((url) => url);\n      setLogoUrlState(logo);\n    };\n    getLogo();\n  }, [logoUrlState]);\n\n  const handleTitleToDo = (event: any) => {\n    setTitleToDo(event.target.value);\n  };\n\n  const handleDescriptionToDo = (event: any) => {\n    setDescriptionToDo(event.target.value);\n  };\n\n  const handleAddToDo = async () => {\n    if (titleToDo !== \"\" && descriptionToDo !== \"\") {\n      setErrorState(0);\n      const newToDos = await addTodo(\n        titleToDo,\n        descriptionToDo,\n        getCurrentUser()\n      );\n      setToDoState(newToDos);\n    } else {\n      setErrorState(1);\n    }\n  };\n\n  const handleSignOutButton = () => {\n    signUserOut().then(() => {\n      const path = \"/\";\n      history.push(path);\n    });\n  };\n\n  return (\n    <>\n      {toDoState && logoUrlState ? (\n        <ContainerForm>\n          <ContentForm\n            style={{\n              height: \"80vh\",\n              width: \"40%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <img\n              src={logoUrlState}\n              style={{ width: \"100px\", height: \"100px\" }}\n            />\n            <h1>Welcome to your ToDos!</h1>\n            <LogOutButton onClick={handleSignOutButton}>Logout</LogOutButton>\n            <p style={{ opacity: errorState, color: \"#F00\" }}>\n              The fields can't be empty!\n            </p>\n            <AddToDoContainer>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Add a title\"\n                style={{ marginRight: \"30px\" }}\n                onChange={handleTitleToDo}\n              />\n              <TextField\n                id=\"standard-basic\"\n                label=\"Add a description\"\n                onChange={handleDescriptionToDo}\n              />\n              <Fab\n                style={{ marginLeft: \"35px\" }}\n                size=\"small\"\n                color=\"primary\"\n                aria-label=\"add\"\n                onClick={() => handleAddToDo()}\n              >\n                <AddIcon />\n              </Fab>\n            </AddToDoContainer>\n            <ToDosContainer>\n              <UlToDo>\n                {toDoState.length > 0 ? (\n                  toDoState?.map((item) => (\n                    <DivLiTodo>\n                      <li key={item.title} style={{ paddingLeft: \"40px\" }}>\n                        <h3>{item.title}</h3>\n                        <p>{item.description}</p>\n                      </li>\n                    </DivLiTodo>\n                  ))\n                ) : (\n                  <ToDoEmpty>\n                    <h2>There's no ToDos currently. Add some!</h2>\n                  </ToDoEmpty>\n                )}\n              </UlToDo>\n            </ToDosContainer>\n          </ContentForm>\n        </ContainerForm>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default ToDoPage;\n","import styled from \"styled-components\";\n\nexport const UsersContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const UlUser = styled.ul`\n  list-style-type: none;\n  width: 100%;\n  padding-left: 0px;\n`;\n\nexport const DivLiUser = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  background: #e0e0e0;\n  width: 100%;\n  height: 150px;\n  border-radius: 5px;\n  box-shadow: 12 0 3 9;\n`;\n\nexport const UserEmpty = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #e0e0e0;\n  margin-bottom: 10px;\n  width: 100%;\n  height: 150px;\n  border-radius: 5px;\n  box-shadow: 12 0 3 9;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { ContainerForm, ContentForm } from \"../globalStyles\";\nimport { UsersContainer, UlUser, DivLiUser, UserEmpty } from \"./styles\";\nimport { LogOutButton } from \"../ToDoPage/styles\";\nimport { useHistory } from \"react-router\";\nimport { signUserOut } from \"../../services/hooks/signUserOut\";\nimport { getAllUsers } from \"../../services/hooks/getAllUsers\";\nimport { storeRef } from \"../../services/firebase\";\n\nfunction AdminPage() {\n  const history = useHistory();\n  const [usersState, setUsersState] = useState<any[]>([]);\n  const [logoUrlState, setLogoUrlState] = useState(\"\");\n\n  useEffect(() => {\n    const getToDos = async () => {\n      let userTypes_user: any[] = [];\n      const allUsers = await getAllUsers();\n      allUsers.forEach((e) => {\n        if (e.type === \"user\") {\n          userTypes_user.push(e);\n        }\n      });\n      setUsersState(userTypes_user);\n    };\n    getToDos();\n  }, usersState);\n\n  useEffect(() => {\n    const getLogo = async () => {\n      const logo = await storeRef\n        .ref(\"todo-logo.webp\")\n        .getDownloadURL()\n        .then((url) => url);\n      setLogoUrlState(logo);\n    };\n    getLogo();\n  }, []);\n\n  const handleSignOutButton = () => {\n    signUserOut().then(() => {\n      const path = \"/\";\n      history.push(path);\n    });\n  };\n\n  return (\n    <>\n      {logoUrlState && usersState ? (\n        <ContainerForm>\n          <ContentForm\n            style={{\n              height: \"80vh\",\n              width: \"40%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <img\n              src={logoUrlState}\n              style={{ width: \"100px\", height: \"100px\" }}\n            />\n            <h1>User List</h1>\n            <LogOutButton onClick={handleSignOutButton}>Logout</LogOutButton>\n            <UsersContainer>\n              <UlUser>\n                {usersState.length > 0 ? (\n                  usersState?.map((item) => (\n                    <DivLiUser>\n                      <li key={item.email} style={{ paddingLeft: \"40px\" }}>\n                        <h3>User's email: {item.email}</h3>\n                        <h3>\n                          That user currently have {item.toDos.length} toDos.\n                        </h3>\n                      </li>\n                    </DivLiUser>\n                  ))\n                ) : (\n                  <UserEmpty>\n                    <h2>There's no Users currently.</h2>\n                  </UserEmpty>\n                )}\n              </UlUser>\n            </UsersContainer>\n          </ContentForm>\n        </ContainerForm>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default AdminPage;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport ToDoPage from \"./pages/ToDoPage/ToDoPage\";\nimport AdminPage from \"./pages/AdminPage/AdminPage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route exact path=\"/toDoPage\" component={ToDoPage} />\n        <Route exact path=\"/adminPage\" component={AdminPage} />\n        <Route exact path=\"*\" component={() => <Redirect to=\"/\" />} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}